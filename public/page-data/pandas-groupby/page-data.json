{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js","path":"/pandas-groupby/","result":{"data":{"site":{"siteMetadata":{"title":"Anderson Berg","social":[{"name":"twitter","url":"https://twitter.com/berg_pe"},{"name":"github","url":"https://github.com/andersonberg"}]}},"blogPost":{"__typename":"MdxBlogPost","id":"a0adba68-fc4f-5a85-92b3-0fce0110b18a","excerpt":"Diversas vezes quando você vai fazer análise de um conjunto grande de dados é preciso agregar esses dados para que eles façam mais sentido e…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Pandas Groupby\",\n  \"date\": \"2021-02-01 00:00\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Diversas vezes quando voc\\xEA vai fazer an\\xE1lise de um conjunto grande de dados \\xE9 preciso agregar esses dados para que eles fa\\xE7am mais sentido e possam ser mais facilmente analisados.\"), mdx(\"p\", null, \"Sempre que tenho a necessidade de organizar dados eu recorro ao groupby do Pandas.\"), mdx(\"p\", null, \"O m\\xE9todo groupby n\\xE3o s\\xF3 faz uma agrega\\xE7\\xE3o dos dados, mas tamb\\xE9m te d\\xE1 a possibilidade de extrair umas estat\\xEDsticas bem interessantes.\"), mdx(\"p\", null, \"Vamos dar uma olhada nesses dados de t\\xEDtulos na Netflix:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \">>> import pandas as pd\\n>>> df = pd.read_csv(\\\"netflix_titles.csv\\\")\\n>>> colunas = ['title', 'country', 'release_year']\\n>>> titulos = df.filter(items=colunas)\\n>>> titulos.head(10)\\ntitle           country     release_year\\n0     3%         Brazil          2020\\n1   7:19         Mexico          2016\\n2  23:59      Singapore          2011\\n3      9  United States          2009\\n4     21  United States          2008\\n5     46         Turkey          2016\\n6    122          Egypt          2019\\n7    187  United States          1997\\n8    706          India          2019\\n9   1920          India          2008\\n\")), mdx(\"p\", null, \"Ser\\xE1 que d\\xE1 pra saber quantos t\\xEDtulos de cada pa\\xEDs existem?\"), mdx(\"p\", null, \"Pra isso eu preciso contar quantas vezes o nome de um pa\\xEDs aparece nessa tabela. \\xC9 aqui que o groupby come\\xE7a a ser \\xFAtil.\"), mdx(\"p\", null, \"Eu quero ent\\xE3o agrupar as linhas de acordo com a coluna \\u201Ccountry\\u201D. Quando o m\\xE9todo groupby \\xE9 executado, ele cria um objeto tamb\\xE9m chamado Groupby, que possui diversos outros m\\xE9todos.\"), mdx(\"p\", null, \"Nesse exemplo, vou usar o \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"count()\"), \" pra fazer a contagem de vezes que um pa\\xEDs aparece na tabela. Al\\xE9m disso, quero que a agrega\\xE7\\xE3o seja feita na coluna \\u201Ctitle\\u201D. Ent\\xE3o o c\\xF3digo fica assim:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \">>> titulos.groupby(['country'])['title'].count()\\ncountry\\nArgentina                                              50\\nArgentina, Brazil, France, Poland, Germany, Denmark     1\\nArgentina, Chile                                        1\\nArgentina, Chile, Peru                                  1\\nArgentina, France                                       1\\n                                                    ..\\nVenezuela                                               1\\nVenezuela, Colombia                                     1\\nVietnam                                                 5\\nWest Germany                                            1\\nZimbabwe                                                1\\nName: title, Length: 681, dtype: int64\\n\")), mdx(\"p\", null, \"A visualiza\\xE7\\xE3o ainda n\\xE3o est\\xE1 perfeita, mas j\\xE1 d\\xE1 pra perceber que houve uma contagem de t\\xEDtulos por pa\\xEDs.\"), mdx(\"p\", null, \"Quero agora melhorar a visualiza\\xE7\\xE3o e ordenar pelo pa\\xEDs com mais t\\xEDtulos primeiro:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \">>> grouped_titulos = titulos.groupby(['country'])['title'].count().reset_index()\\n>>> grouped_titulos.sort_values('title', ascending=False).head(10)\\n            country  title\\n549   United States   2555\\n229           India    923\\n462  United Kingdom    397\\n291           Japan    226\\n394     South Korea    183\\n51           Canada    177\\n403           Spain    134\\n147          France    115\\n137           Egypt    101\\n308          Mexico    100\\n\")), mdx(\"p\", null, \"O \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"groupby\"), \" tamb\\xE9m aceita o agrupamento por mais de uma coluna. Vamos supor que eu quero saber quantos t\\xEDtulos foram lan\\xE7ados em cada ano, pelo mesmo pa\\xEDs:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \">>> group_titulos = titulos.groupby(['country', 'release_year']).count().reset_index()\\n>>> group_titulos.sort_values('title', ascending=False).head()\\n        country       release_year   title\\n1330  United States          2019    359\\n1328  United States          2017    351\\n1329  United States          2018    348\\n1331  United States          2020    332\\n1327  United States          2016    254\\n\")), mdx(\"p\", null, \"O objetivo aqui era dar uma breve introdu\\xE7\\xE3o ao groupby e um pouco do que pode ser feito com essa fun\\xE7\\xE3o.\"), mdx(\"p\", null, \"Existem outras fun\\xE7\\xF5es do objeto Groupby bastante \\xFAteis tamb\\xE9m e que podem ser encontradas na documenta\\xE7\\xE3o do Pandas.\"), mdx(\"p\", null, \"No futuro, em outro post posso detalhar melhor essas outras fun\\xE7\\xF5es aplicadas a conjuntos de dados diferentes.\"));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/pandas-groupby/","title":"Pandas Groupby","tags":[],"date":"February 01, 2021","image":null,"imageAlt":null,"imageCaptionText":null,"imageCaptionLink":null,"socialImage":null},"previous":{"__typename":"MdxBlogPost","id":"42c97f81-485b-5dbb-b2cf-26d46b34cf54","excerpt":"Uma das etapas mais importantes do web-scraping (ou raspagem de dados) é garantir a qualidade das informações extraídas. Devido ao grande…","slug":"/como-monitorar-spiders-spidermon/","title":"Como monitorar web-crawlers com Spidermon","date":"September 06, 2020"},"next":null},"pageContext":{"id":"a0adba68-fc4f-5a85-92b3-0fce0110b18a","previousId":"42c97f81-485b-5dbb-b2cf-26d46b34cf54","maxWidth":1380}},"staticQueryHashes":["2744905544","3090755652","386998304","764694655"]}